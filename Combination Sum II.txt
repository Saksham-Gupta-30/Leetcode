class Solution {
public:
    void recursion(int ind, vector<int> &ds, int target, vector<int> &arr, vector<vector<int>> &ans) {
        if (target == 0) {
            ans.push_back(ds);
            return;
        }
        for (int i = ind; i < arr.size(); i++) {
            if (i > ind && arr[i] == arr[i - 1]) continue;
            if (arr[i] > target) break;
            ds.push_back(arr[i]);
            recursion(i + 1, ds, target - arr[i], arr, ans);
            ds.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        sort(candidates.begin(), candidates.end());
        recursion(0, ds, target, candidates, ans);
        return ans;
    }
};
